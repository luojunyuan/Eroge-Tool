# -*- coding: utf-8 -*-

# Resource object code
#
# Created: 周三 3月 25 02:20:53 2020
#      by: The Resource Compiler for PySide (Qt v4.8.7)
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore

qt_resource_data = b"\x00\x00\x0fX<?xml version=\x221.0\x22 encoding=\x22UTF-8\x22 standalone=\x22no\x22?>\x0d\x0a<!-- Created with Inkscape (http://www.inkscape.org/) --><svg viewBox=\x22100 200 550 500\x22 height=\x22841.88976pt\x22 id=\x22svg1\x22 inkscape:version=\x220.40+cvs\x22 sodipodi:docbase=\x22C:\x5cDocuments and Settings\x5cJon Phillips\x5cMy Documents\x5cprojects\x5cclipart-project\x5csubmissions\x22 sodipodi:docname=\x22heart-left-highlight.svg\x22 sodipodi:version=\x220.32\x22 width=\x22595.27559pt\x22 xmlns=\x22http://www.w3.org/2000/svg\x22 xmlns:cc=\x22http://web.resource.org/cc/\x22 xmlns:dc=\x22http://purl.org/dc/elements/1.1/\x22 xmlns:inkscape=\x22http://www.inkscape.org/namespaces/inkscape\x22 xmlns:rdf=\x22http://www.w3.org/1999/02/22-rdf-syntax-ns#\x22 xmlns:sodipodi=\x22http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd\x22 xmlns:svg=\x22http://www.w3.org/2000/svg\x22>\x0d\x0a<metadata>\x0d\x0a<rdf:RDF xmlns:cc=\x22http://web.resource.org/cc/\x22 xmlns:dc=\x22http://purl.org/dc/elements/1.1/\x22 xmlns:rdf=\x22http://www.w3.org/1999/02/22-rdf-syntax-ns#\x22>\x0d\x0a<cc:Work rdf:about=\x22\x22>\x0d\x0a<dc:title>Heart Left-Highlight</dc:title>\x0d\x0a<dc:description>This is a normal valentines day heart.</dc:description>\x0d\x0a<dc:subject>\x0d\x0a<rdf:Bag>\x0d\x0a<rdf:li>holiday</rdf:li>\x0d\x0a<rdf:li>valentines</rdf:li>\x0d\x0a<rdf:li></rdf:li>\x0d\x0a<rdf:li>valentine</rdf:li>\x0d\x0a<rdf:li>hash(0x8a091c0)</rdf:li>\x0d\x0a<rdf:li>hash(0x8a0916c)</rdf:li>\x0d\x0a<rdf:li>signs_and_symbols</rdf:li>\x0d\x0a<rdf:li>hash(0x8a091f0)</rdf:li>\x0d\x0a<rdf:li>day</rdf:li>\x0d\x0a</rdf:Bag>\x0d\x0a</dc:subject>\x0d\x0a<dc:publisher>\x0d\x0a<cc:Agent rdf:about=\x22http://www.openclipart.org\x22>\x0d\x0a<dc:title>Jon Phillips</dc:title>\x0d\x0a</cc:Agent>\x0d\x0a</dc:publisher>\x0d\x0a<dc:creator>\x0d\x0a<cc:Agent>\x0d\x0a<dc:title>Jon Phillips</dc:title>\x0d\x0a</cc:Agent>\x0d\x0a</dc:creator>\x0d\x0a<dc:rights>\x0d\x0a<cc:Agent>\x0d\x0a<dc:title>Jon Phillips</dc:title>\x0d\x0a</cc:Agent>\x0d\x0a</dc:rights>\x0d\x0a<dc:date></dc:date>\x0d\x0a<dc:format>image/svg+xml</dc:format>\x0d\x0a<dc:type rdf:resource=\x22http://purl.org/dc/dcmitype/StillImage\x22/>\x0d\x0a<cc:license rdf:resource=\x22http://web.resource.org/cc/PublicDomain\x22/>\x0d\x0a<dc:language>en</dc:language>\x0d\x0a</cc:Work>\x0d\x0a<cc:License rdf:about=\x22http://web.resource.org/cc/PublicDomain\x22>\x0d\x0a<cc:permits rdf:resource=\x22http://web.resource.org/cc/Reproduction\x22/>\x0d\x0a<cc:permits rdf:resource=\x22http://web.resource.org/cc/Distribution\x22/>\x0d\x0a<cc:permits rdf:resource=\x22http://web.resource.org/cc/DerivativeWorks\x22/>\x0d\x0a</cc:License>\x0d\x0a</rdf:RDF>\x0d\x0a</metadata>\x0d\x0a<defs id=\x22defs3\x22/>\x0d\x0a<sodipodi:namedview bordercolor=\x22#666666\x22 borderopacity=\x221.0\x22 id=\x22base\x22 inkscape:current-layer=\x22layer1\x22 inkscape:cx=\x22549.40674\x22 inkscape:cy=\x22596.00159\x22 inkscape:document-units=\x22px\x22 inkscape:guide-bbox=\x22true\x22 inkscape:pageopacity=\x220.0\x22 inkscape:pageshadow=\x222\x22 inkscape:window-height=\x22615\x22 inkscape:window-width=\x22866\x22 inkscape:window-x=\x2288\x22 inkscape:window-y=\x22116\x22 inkscape:zoom=\x220.35000000\x22 pagecolor=\x22#ffffff\x22 showguides=\x22true\x22/>\x0d\x0a<g id=\x22layer1\x22 inkscape:groupmode=\x22layer\x22 inkscape:label=\x22Layer 1\x22>\x0d\x0a<path d=\x22M 263.41570,235.14588 C 197.17570,235.14588 143.41575,288.90587 143.41575,355.14588 C 143.41575,489.90139 279.34890,525.23318 371.97820,658.45392 C 459.55244,526.05056 600.54070,485.59932 600.54070,355.14588 C 600.54070,288.90588 546.78080,235.14587 480.54070,235.14588 C 432.49280,235.14588 391.13910,263.51631 371.97820,304.33338 C 352.81740,263.51630 311.46370,235.14587 263.41570,235.14588 z \x22 id=\x22path7\x22 sodipodi:nodetypes=\x22ccccccc\x22 style=\x22fill:#e60000;fill-opacity:1.0000000;stroke:#000000;stroke-width:18.700001;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000\x22/>\x0d\x0a<path d=\x22M 265.00000,253.59375 C 207.04033,253.59375 160.00000,300.63407 160.00000,358.59375 C 160.00000,476.50415 278.91857,507.43251 359.96875,624.00000 C 366.52868,614.08205 220.00000,478.47309 220.00000,378.59375 C 220.00000,320.63407 267.04033,273.59375 325.00000,273.59375 C 325.50453,273.59375 325.99718,273.64912 326.50000,273.65625 C 309.22436,261.07286 288.00557,253.59374 265.00000,253.59375 z \x22 id=\x22path220\x22 sodipodi:nodetypes=\x22ccccccc\x22 style=\x22fill:#e6e6e6;fill-opacity:0.64556962;stroke:none;stroke-width:18.700001;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000\x22/>\x0d\x0a</g>\x0d\x0a</svg>\x0d\x0a\x00\x00\x19\xf5import QtQuick 1.1\x0d\x0aimport 'lib/QtDesktop' as Desktop\x0d\x0a//import QtDesktop 1.0 as Desktop\x0d\x0aimport eroge.tool 1.0 as Plugin\x0d\x0aimport 'TextDisplay'\x0d\x0a\x0d\x0aItem {\x0d\x0a    id: root\x0d\x0a\x0d\x0a    // If you fon't set full screen in python, it will show 800*600 by default\x0d\x0a    implicitWidth: 800\x0d\x0a    implicitHeight: 600\x0d\x0a\x0d\x0a//    property bool ignoresFocus: dock_.ignoresFocusChecked && gameProxy_.fullScreen\x0d\x0a\x0d\x0a\x0d\x0a    Component.onCompleted: {\x0d\x0a//        console.log(\x22text_window.qml: taskbar height =\x22, taskBar_.height)\x0d\x0a        console.log(\x22text_display.qml:completed: pass\x22)\x0d\x0a    }\x0d\x0a\x0d\x0a    Component.onDestruction: {\x0d\x0a        console.log(\x22text_display.qml:destroy: pass\x22)\x0d\x0a    }\x0d\x0a\x0d\x0a\x0d\x0a//    Item {\x0d\x0a//        id: gamePanel\x0d\x0a//\x0d\x0a//        anchors.fill: parent\x0d\x0a//\x0d\x0a//        visible: true  // gameProxy_.visible && !gameProxy_.minimized\x0d\x0a//\x0d\x0a//        onVisibleChanged: console.log(\x22text_display.qml: visible =\x22, visible)\x0d\x0a\x0d\x0a//        Kagami.CentralArea {\x0d\x0a//            id: center_\x0d\x0a//\x0d\x0a//            height: gameProxy_.height\x0d\x0a//            width: gameProxy_.width\x0d\x0a//            x: gameProxy_.x\x0d\x0a//            y: gameProxy_.y\x0d\x0a//\x0d\x0a//            // XXX what is this use for?\x0d\x0a//            borderVisible: dock_.gameBorderChecked && Qt.application.active && !root.ignoresFocus\x0d\x0a//        }\x0d\x0a//\x0d\x0a//        Kagami.Grimoire {\x0d\x0a//            id: grimoire_\x0d\x0a//            //anchors {\x0d\x0a//            //  fill: locked ? center_ : undefined\x0d\x0a//            //  leftMargin: center_.width * (1 - widthFactor) / 2\x0d\x0a//            //  rightMargin: center_.width * (1 - widthFactor) / 2\x0d\x0a//            //  bottomMargin: center_.height / 4\x0d\x0a//            //  topMargin: gameProxy_.fullScreen ? 0 : 25\x0d\x0a//            //}\x0d\x0a//            x: locked ? relativeX + center_.x : x\x0d\x0a//            y: locked ? relativeY + center_.y : y\x0d\x0a//            width: center_.width * widthFactor\x0d\x0a//            height: center_.height * 3 / 4\x0d\x0a//\x0d\x0a//            function ensureVisible() {\x0d\x0a//                if (x < center_.x || x+width/2 > center_.x+center_.width) {\x0d\x0a//                    if (locked) relativeX = (center_.width - width) / 2\x0d\x0a//                    else x = center_.x + (center_.width - width) / 2\x0d\x0a//                }\x0d\x0a//                if (y < center_.y || y+height/2 > center_.y+center_.height) {\x0d\x0a//                    if (locked) relativeY = 25\x0d\x0a//                    else y = center_.y + 25\x0d\x0a//                }\x0d\x0a//            }\x0d\x0a//\x0d\x0a//            furiganaType: settings_.furiganaType\x0d\x0a//\x0d\x0a//            alignCenter: dock_.alignCenterChecked\x0d\x0a//\x0d\x0a//            shadowOpacity: dock_.shadowOpacity\x0d\x0a//            shadowColor: settings_.grimoireShadowColor\x0d\x0a//            textColor: settings_.grimoireTextColor\x0d\x0a//            translationColor: settings_.grimoireTranslationColor\x0d\x0a//            commentColor: settings_.grimoireSubtitleColor\x0d\x0a//\x0d\x0a//            property int relativeX: (center_.width - width) / 2\x0d\x0a//            property int relativeY: gameProxy_.fullScreen ? 0 : 25\x0d\x0a//\x0d\x0a//            onLockedChanged: {\x0d\x0a//                relativeX = x - center_.x\x0d\x0a//                relativeY = y - center_.y\x0d\x0a//            }\x0d\x0a//\x0d\x0a//            ignoresFocus: root.ignoresFocus\x0d\x0a//\x0d\x0a//            //borderVisible: dock_.borderChecked\x0d\x0a//            //locked: dock_.lockChecked\x0d\x0a//\x0d\x0a//            zoomFactor: dock_.zoomFactor\x0d\x0a//            property alias widthFactor: dock_.widthFactor\x0d\x0a//\x0d\x0a//            textVisible: dock_.textChecked\x0d\x0a//            translationVisible: dock_.translationChecked\x0d\x0a//            commentVisible: dock_.subtitleChecked\x0d\x0a//            readEnabled: dock_.readChecked\x0d\x0a//            copyEnabled: dock_.copyChecked\x0d\x0a//            hoverEnabled: dock_.hoverChecked\x0d\x0a//            shadowEnabled: dock_.shadowChecked\x0d\x0a//            //revertsColor: dock_.revertsColorChecked\x0d\x0a//\x0d\x0a//            onVisibleChanged:\x0d\x0a//                if (visible != dock_.visibleChecked)\x0d\x0a//                    dock_.visibleChecked = visible\x0d\x0a//\x0d\x0a//            //visible: dock_.visibleChecked\x0d\x0a//            //onVisibleChanged: {\x0d\x0a//            //  console.log(\x22text_window.qml:grimoire: visible =\x22, visible)\x0d\x0a//            //  if (visible)\x0d\x0a//            //    scrollEnd()\x0d\x0a//            //  //else\x0d\x0a//            //  //  repaint()\x0d\x0a//            //}\x0d\x0a//        }\x0d\x0a//\x0d\x0a//        // Kagami.Gospel {\x0d\x0a//        //   minimumX: 0; minimumY: 0\x0d\x0a//        //   maximumX: parent.width - width\x0d\x0a//        //   maximumY: parent.height - height\x0d\x0a//\x0d\x0a//        //   ignoresFocus: root.ignoresFocus\x0d\x0a//        //   effectColor: settings_.grimoireCommentColor\x0d\x0a//\x0d\x0a//        //   commentVisible: dock_.subtitleChecked\x0d\x0a//\x0d\x0a//        //   property bool invisible: !visible || !opacity\x0d\x0a//        //   onInvisibleChanged:\x0d\x0a//        //     if (!invisible)\x0d\x0a//        //       updatePosition()\x0d\x0a//\x0d\x0a//        //   function updatePosition() {\x0d\x0a//        //     x = center_.x + center_.width - width - 20 // margin right\x0d\x0a//        //     y = center_.y + (center_.height - height) / 2\x0d\x0a//        //     ensureVisible()\x0d\x0a//        //   }\x0d\x0a//        // }\x0d\x0a//\x0d\x0a//        Kagami.Dock {\x0d\x0a//            id: dock_\x0d\x0a//\x0d\x0a//            anchors.verticalCenter: center_.verticalCenter\x0d\x0a//            anchors.left: alignment == Qt.AlignLeft ? center_.left : undefined\x0d\x0a//            anchors.right: alignment == Qt.AlignRight ? center_.left : undefined\x0d\x0a//\x0d\x0a//            //alignment: root.ignoresFocus ? Qt.AlignLeft : Qt.AlignRight\x0d\x0a//            alignment: Qt.AlignLeft\x0d\x0a//\x0d\x0a//            //onIgnoresFocusCheckedChanged:\x0d\x0a//            //  settings_.text_displayIgnoresFocus = ignoresFocusChecked\x0d\x0a//\x0d\x0a//            onUpButtonClicked: grimoire_.scrollBeginning()\x0d\x0a//            onDownButtonClicked: grimoire_.scrollEnd()\x0d\x0a//\x0d\x0a//            onVisibleCheckedChanged:\x0d\x0a//                if (visibleChecked != grimoire_.visible) {\x0d\x0a//                    if (visibleChecked)\x0d\x0a//                        grimoire_.show()\x0d\x0a//                    else\x0d\x0a//                        grimoire_.hide()\x0d\x0a//                }\x0d\x0a//        }\x0d\x0a//    }\x0d\x0a}\x0d\x0a//    Plugin.MainObjectProxy { id: main_ } //no used in this file\x0d\x0a\x0d\x0a//    Plugin.GameWindowProxy {\x0d\x0a//        id: gameProxy_\x0d\x0a//\x0d\x0a//        onMinimizedChanged:\x0d\x0a//            //console.log(\x22text_window.qml:gamewindowproxy: minimized =\x22, minimized)\x0d\x0a//            if (!minimized)\x0d\x0a//                grimoire_.scrollEnd()\x0d\x0a//\x0d\x0a//        onWindowClosed:\x0d\x0a//            shiori_.hideNow()\x0d\x0a//\x0d\x0a//        onFullScreenChanged: {\x0d\x0a//            if (fullScreen)\x0d\x0a//                grimoire_.ensureVisible()\x0d\x0a//            grimoire_.scrollEnd()\x0d\x0a//        }\x0d\x0a//    }\x0d\x0a\x0d\x0a    //Plugin.TaskBarProxy { id: taskBar_ }\x0d\x0a    //property int taskBarHeight: taskBar_.visible ? taskBar_.height : 0\x0d\x0a"
qt_resource_name = b"\x00\x09\x08\x97\x87\xa7\x00h\x00e\x00a\x00r\x00t\x00.\x00s\x00v\x00g\x00\x0f\x04&\x0f\x9c\x00t\x00e\x00x\x00t\x00_\x00w\x00i\x00n\x00d\x00o\x00w\x00.\x00q\x00m\x00l"
qt_resource_struct = b"\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x18\x00\x00\x00\x00\x00\x01\x00\x00\x0f\x5c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00"
def qInitResources():
    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

def qCleanupResources():
    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

qInitResources()
